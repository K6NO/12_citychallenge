"use strict";var cityChallengeApp=angular.module("cityChallengeApp",["ngRoute","navbar"]);cityChallengeApp.run(["$rootScope","$location","$route","authService",function(e,t,n,r){e.$on("$routeChangeStart",function(n,l){r.getUserStatus().then(function(){l.isLogin&&!r.isLoggedIn()?(e.savedLocation=t.url(),t.path("/login")):console.log("logged in or login not required!")})})}]),angular.module("cityChallengeApp").config(["$locationProvider","$routeProvider","$httpProvider",function(e,t,n){t.when("/challenges/",{controller:"ChallengesController",controllerAs:"vm",templateUrl:"templates/challenge-list.template.html",isLogin:!1}).when("/challenges/:challengeId",{controller:"ChallengeController",controllerAs:"vm",templateUrl:"templates/challenge-detail.template.html",isLogin:!0}).when("/profile",{controller:"ProfileController",controllerAs:"vm",templateUrl:"templates/profile.template.html",isLogin:!0}).when("/challenges/current/:currentChallengeId",{controller:"CurrentChallengeController",controllerAs:"vm",templateUrl:"templates/current-challenge.template.html",isLogin:!0}).when("/login",{controller:"LoginController",controllerAs:"vm",templateUrl:"templates/login.template.html",isLogin:!1}).when("/logout",{controller:"LogoutController",controllerAs:"vm",isLogin:!1}).when("/signup",{controller:"SignupController",controllerAs:"vm",templateUrl:"templates/signup.template.html",isLogin:!1}).otherwise("/challenges")}]),angular.module("navbar",[]).component("navbar",{templateUrl:"templates/navbar.template.html",controller:"NavbarController"}),angular.module("cityChallengeApp").factory("authService",["$q","$timeout","$http",function(e,t,n){function r(){return!!c}function l(){return n.get("/auth/loggedin").then(function(e){!1===e.data.status?c=!1:(c=!0,u=e.data.user)})}function a(){return u||!1}function o(t,r){var l=e.defer();return n.post("/auth/login",{emailAddress:t,password:r}).then(function(e){200===e.status?(c=!0,u=e.data,l.resolve()):(c=!1,l.reject())}).catch(function(e){c=!1,l.reject(e)}),l.promise}function s(){var t=e.defer();return n.get("/auth/logout").then(function(){c=!1,u=null,t.resolve()}).catch(function(){c=!1,t.reject()}),t.promise}function i(t){var r=e.defer();return n.post("/auth/signup",t).then(function(e){200===e.status&&e?(u=e.data,r.resolve()):r.reject()}).catch(function(e){r.reject(e)}),r.promise}var c=null,u=null;return{isLoggedIn:r,getUserStatus:l,login:o,logout:s,register:i,getLoggedInUser:a}}]),function(){angular.module("cityChallengeApp").service("dataService",["$http",function(e){this.getChallenges=function(t){e.get("/api/challenges").then(t)},this.getChallenge=function(t,n){e.get("/api/challenges/"+t).then(n)},this.addChallenge=function(t,n,r){e.post("/api/challenges",t).then(n,r)},this.updateChallenge=function(t,n,r,l){e.put("/api/challenges/"+t,n).then(r,l)},this.getCurrentChallenge=function(t,n,r){e.get("/api/current/challenges/"+t).then(n,r)},this.getCurrentChallengesForUser=function(t,n){e.get("/api/current/user/challenges/").then(t,n)},this.addCurrentChallenge=function(t,n,r){e.post("/api/current/challenges/",t).then(n,r)},this.abandonCurrentChallenge=function(t,n,r,l){e.put("/api/current/challenges/"+t+"/abandon",n).then(r,l)},this.stepCompletedCurrentChallenge=function(t,n,r,l){e.put("/api/current/challenges/"+t,n).then(r,l)},this.getUser=function(t,n){e.get("/api/users/"+t).then(n)},this.addUser=function(t,n,r){e.post("/api/users",t).then(n,r)},this.updateUser=function(t,n,r,l){e.put("/api/users/"+t,n).then(r,l)},this.getMessages=function(t,n){e.get("/api/current/challenges/"+t+"/messages").then(n)},this.sendMessage=function(t,n,r,l){e.post("/api/current/challenges/"+t+"/messages",n).then(r,l)}}])}(),cityChallengeApp.directive("footerElement",function(){return{templateUrl:"templates/footer.template.html",restrict:"E",replace:!0}}),function(){angular.module("cityChallengeApp").controller("ChallengeController",["$scope","$location","$filter","dataService","authService",function(e,t,n,r,l){e.pageIdentifier="landing-page",e.buttonFlag="";var a=t.path().split("/")[2],o=void 0;console.log(a),void 0!=a&&r.getChallenge(a,function(t){var n=l.getLoggedInUser();e.user=n,o=n._id,e.challenge=t.data.challenge,t.data.currentChallenges.some(function(t){return console.log("in some"),"active"===t.state||"waiting"===t.state?(e.currentChallengeId=t._id,e.buttonFlag="active",void console.log("active")):"completed"===t.state?(e.currentChallengeId=t._id,e.buttonFlag="completed",void console.log("completed")):(e.currentChallengeId=t._id,e.buttonFlag="failed",void console.log("failed"))})},function(t){e.errors=t}),e.startCurrentChallenge=function(){var n={user:o,challenge:a,steps:[{description:e.challenge.steps[0].description,stepNumber:e.challenge.steps[0].stepNumber},{description:e.challenge.steps[1].description,stepNumber:e.challenge.steps[1].stepNumber},{description:e.challenge.steps[2].description,stepNumber:e.challenge.steps[2].stepNumber}]};r.addCurrentChallenge(n,function(n){console.log(n),e.currentChallenge=n.data.currentChallenge,t.path("/challenges/current/"+n.data.currentChallenge._id)},function(t){e.errors=t.data.errors})}}])}(),function(){angular.module("cityChallengeApp").controller("ChallengesController",["$scope","$location","$filter","dataService",function(e,t,n,r){r.getChallenges(function(t){e.challenges=t.data}),e.pageIndicator="landing-page"}])}(),function(){angular.module("cityChallengeApp").controller("CurrentChallengeController",["$scope","$location","$route","$filter","dataService","authService",function(e,t,n,r,l,a){var o=function(t){e.errors=t.data};e.pageIdentifier="landing-page",e.message={};var s=a.getLoggedInUser();console.log(s._id);var i=t.path().split("/")[3];void 0!=i&&l.getCurrentChallenge(i,function(t){function n(e,t){return e.createdAt<t.createdAt?-1:e.createdAt>t.createdAt?1:0}if(t.data.currentChallenge.user._id!==s._id)e.errors="It is not your challenge, so you cannot see it.";else{var r=t.data.currentChallenge.messages,l=[];if(t.data.partnerMessages){var a=t.data.partnerMessages;l=r.concat(a),e.partnerMessages=t.data.partnerMessages}else l=r;l.sort(n),e.currentChallenge=t.data.currentChallenge,l&&(e.messages=l)}},o),e.saveSteps=function(){l.stepCompletedCurrentChallenge(e.currentChallenge._id,e.currentChallenge.steps,function(e){n.reload()},o)},e.abandonCurrentChallenge=function(){var n={state:"abandoned"};l.abandonCurrentChallenge(i,n,function(n){e.currentChallenge=n,console.log(e.currentChallenge),t.path("/challenges")},o)},e.sendMessage=function(t){console.log(t),l.sendMessage(e.currentChallenge._id,{message:t},function(t){e.currentChallenge.messages=t.data,e.newMessageText="",n.reload()},o)}}])}(),function(){angular.module("cityChallengeApp").controller("LoginController",["$scope","$location","dataService","authService",function(e,t,n,r){e.pageIdentifier="signup-page",e.user={},e.errors=[],e.removeError=function(){e.errors=[]},e.login=function(){r.login(e.user.emailAddress,e.user.password).then(function(){t.path("/profile")}).catch(function(t){401===t.status?(e.errors.push("Email already registered or wrong password."),e.user.password=""):(e.errors.push(t.data),e.user.password="")})}}])}(),function(){angular.module("cityChallengeApp").controller("LogoutController",["$scope","$location","dataService","authService",function(e,t,n,r){e.pageIdentifier="signup-page",e.user={},e.logout=function(){r.logout().then(function(){t.path("/challenges")}).catch(function(){e.errors="Cannot logout"})}}])}(),angular.module("navbar").controller("NavbarController",["$scope","authService",function(e,t){e.isCollapsed=!0;var n=t.getLoggedInUser();e.user=n}]),function(){angular.module("cityChallengeApp").controller("ProfileController",["$scope","$location","$filter","dataService","authService",function(e,t,n,r,l){e.pageIndicator="profile-page";var a=l.getLoggedInUser();e.user=a,console.log(a._id),r.getCurrentChallengesForUser(function(t){e.currentChallenges=t.data},function(t){e.errors=t.data.errors});var o={1:"Initiate",2:"Waking Consciousness",3:"Deep Dreaming",4:"Inner Silence",5:"Awakening",6:"Eternal Sunshine",7:"Mindful Inner Peace",8:"Spirit Being"};e.rank=o[a.level]}])}(),function(){angular.module("cityChallengeApp").controller("SignupController",["$scope","$location","$filter","dataService","authService",function(e,t,n,r,l){e.errors=[],e.pageIdentifier="signup-page",e.user={},e.selectedProfilePic=0,e.chooseProfilePic=function(t){var n=t.target.attributes.src.value;e.selectedProfilePic=t.target.attributes.id.value,e.user.photoUrl=n},e.removeError=function(){e.errors=[]},e.register=function(n){n.fullName&&n.userName&&n.emailAddress&&n.password&&n.photoUrl?l.register(n).then(function(e){console.log(e),t.path("/profile")}).catch(function(t){e.user.password="",e.errors.push(t.data)}):(e.user.password="",e.errors.push("Fill in all fields and choose a profile pic."))}}])}();
//# sourceMappingURL=all.min.js.map
